<%# locals: (action:, form_elements:, option_tree:, option_parents:, dynamic_template: nil, dynamic_template_id: nil, dynamic_container_id: nil, dynamic_add_button_id: nil, dynamic_button_text: nil) %>
<% nonce = SecureRandom.base64(32)
content_security_policy.add_script_src [:nonce, nonce] %>

<script nonce="<%==nonce%>">
let option_tree = <%==JSON.generate(option_tree)%>
let option_children = <%==JSON.generate(option_parents.each_with_object(Hash.new { |h, k| h[k] = [] }) { |(child, parents), h| h[parents.last] << child if parents.any? })%>
let option_dirty = <%==JSON.generate(form_elements.map { _1[:name] }.each_with_object(Hash.new { |h, k| h[k] = [] }) { |option, h| h[option] = nil })%>
</script>

<div class="grid gap-6">
  <form action="<%= action %>" method="POST" id="creation-form">
    <%== csrf_tag(action) %>
    <div class="overflow-hidden rounded-lg shadow ring-1 ring-black ring-opacity-5 bg-white">
      <div class="px-4 py-5 sm:p-6">
        <div class="space-y-12">
          <div>
            <div class="mt-2 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
              <% selected_options = {}
form_elements.each do |element|
  container_opening_tag = element[:opening_tag] || "<div class='col-span-full'>"
  container_closing_tag = element[:closing_tag] || "</div>"

  name, type, label, required, placeholder, content_generator = element.values_at(:name, :type, :label, :required, :placeholder, :content_generator)

  has_option = ["radio_small_cards", "select", "checkbox"].include?(type)
  options = OptionTreeGenerator.generate_allowed_options(name, option_tree, option_parents).map do |option|
    opt_val = (type == "select") ? option[name][:value] : option[name]

    opt_text = content_generator.call(*option.values)

    parents = option.reject { |k, v| k == name }
    parents_selected = parents.all? { |k, v| selected_options[k] == v }
    checked = parents_selected && (flash.dig("old", name) == opt_val || (flash.dig("old", name).nil? && selected_options[name].nil?))
    selected_options[name] = opt_val if checked
    opt_classes = (parents.map { |k, v| "form_#{k} form_#{k}_#{v}" } + (parents_selected ? [] : ["hidden"])).join(" ")

    opt_attrs = {}
    opt_attrs[:disabled] = "disabled" unless parents_selected
    opt_attrs[:checked] = "checked" if checked

    [opt_val, opt_text, opt_classes, opt_attrs]
  end if has_option

  if has_option && selected_options[name].nil?
    options.find{ |_, _, _, opt_attrs| opt_attrs[:disabled].nil? }&.tap do |opt_val, _, _, opt_attrs|
      opt_attrs[:checked] = "checked"
      selected_options[name] = opt_val
    end
  end

  case type
  when "radio_small_cards"
    locals = {name:, label:, options:, attributes: {required:}}
  when "select"
    locals = {name:, label:, options:, placeholder:, description_html: element[:description_html]}
  when "checkbox"
    locals = {name:, label:, options:, description: element[:description]}
  when "text"
    locals = {name:, label:, value: element[:value], attributes: {required:, placeholder:}}
  when "number"
    locals = {name:, label:, type: "number", attributes: {required:, placeholder:}}
    type = "text"
  when "textarea"
    locals = {name:, label:, description: element[:description], attributes: {required:, placeholder:, rows: 3}}
  when "hidden"
    selected_options[name] = element[:value]
    locals = {name:, value: element[:value]}
    container_opening_tag, container_closing_tag = "", ""
  when "partnership_notice"
    description, tos_text = content_generator.call(@flavor)
    locals = {description:, tos_text:}
  when "section"
    locals = {label:, content: element[:content]}
  # :nocov:
  else
    raise "Unknown element type: #{type}"
  # :nocov:
  end %>
                <%== container_opening_tag %>
                <%== part("components/form/#{type}", **locals) %>
                <%== container_closing_tag %>
              <% end %>
            </div>
          </div>
        </div>

<% if dynamic_template && dynamic_template.strip != "" %>
        <div id="<%= dynamic_container_id || 'dynamic-container' %>" class="mt-6"></div>
        <template id="<%= dynamic_template_id || 'dynamic-template' %>" class="hidden">
          <%== dynamic_template %>
        </template>
        <div class="mt-4">
          <button type="button" id="<%= dynamic_add_button_id || 'new-dynamic-btn' %>" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none">
            <%= dynamic_button_text || "Add" %>
          </button>
        </div>
        <script nonce="<%==nonce%>">
          (function() {
            var counter = 0;
            var addButton = document.getElementById("<%= dynamic_add_button_id || 'new-dynamic-btn' %>");
            addButton.addEventListener("click", function(e) {
              e.preventDefault();
              counter++;
              var template = document.getElementById("<%= dynamic_template_id || 'dynamic-template' %>");
              var clone;
              if ('content' in template) {
                clone = document.importNode(template.content, true);
              } else {
                clone = document.createElement("div");
                clone.innerHTML = template.innerHTML;
              }
              clone.querySelectorAll("input, select, textarea").forEach(function(el, idx) {
                var newId = "dynamic-entry-" + counter + "-" + idx;
                el.id = newId;
                var originalFor = el.getAttribute("data-original-id");
                if(originalFor) {
                  var label = clone.querySelector("label[for='" + originalFor + "']");
                  if(label) {
                    label.setAttribute("for", newId);
                  }
                }
              });
              document.getElementById("<%= dynamic_container_id || 'dynamic-container' %>").appendChild(clone);
            });
          })();
        </script>
<% end %>

      </div>
      <div class="px-4 py-5 sm:p-6">
        <div class="flex items-center justify-end gap-x-6">
          <a href="<%= action %>" class="text-sm font-semibold leading-6 text-gray-900">Cancel</a>
          <%== part("components/form/submit_button", text: "Create") %>
        </div>
      </div>
    </div>
  </form>
</div>
